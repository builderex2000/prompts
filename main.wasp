app Prompts {
  wasp: {
    version: "^0.11.1"
  },
  title: "Prompts",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int      @id @default(autoincrement())
    username String   @unique
    password String
    prompts  Prompt[]
psl=}

entity Prompt {=psl
    id          Int     @id @default(autoincrement())
    title       String
    description String
    isPublic    Boolean @default(false)
    user        User    @relation(fields: [userId], references: [id])
    userId      Int
    nft         NFT?
psl=}

entity NFT {=psl
    id       Int    @id @default(autoincrement())
    name     String
    price    Float
    url      String
    promptId Int    @unique
    prompt   Prompt @relation(fields: [promptId], references: [id])
psl=}

action createPrompt {
  fn: import { createPrompt } from "@server/actions.js",
  entities: [Prompt, NFT]
}

action updatePrompt {
  fn: import { updatePrompt } from "@server/actions.js",
  entities: [Prompt, NFT]
}

action deletePrompt {
  fn: import { deletePrompt } from "@server/actions.js",
  entities: [Prompt, NFT]
}

query getPrompt {
  fn: import { getPrompt } from "@server/queries.js",
  entities: [Prompt, NFT]
}

query getUserPrompts {
  fn: import { getUserPrompts } from "@server/queries.js",
  entities: [User, Prompt, NFT]
}

query getPublicPrompts {
  fn: import { getPublicPrompts } from "@server/queries.js",
  entities: [Prompt, NFT]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { Home } from "@client/pages/Home.jsx",
  authRequired: false
}

route UserPromptsRoute { path: "/my-prompts", to: UserPromptsPage }
page UserPromptsPage {
  component: import { UserPrompts } from "@client/pages/UserPrompts.jsx",
  authRequired: true
}

route PromptRoute { path: "/prompt/:promptId", to: PromptPage }
page PromptPage {
  component: import { Prompt } from "@client/pages/Prompt.jsx",
  authRequired: true
}
